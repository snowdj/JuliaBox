include("setup.jl")


function createModel()
    m = Model()
@variable(m, x2 )
@variable(m, x3 )
@variable(m, x4 )
@variable(m, x5 )
@variable(m, x6 )
@variable(m, x7 )
@variable(m, x8 )
@variable(m, x9 )
@variable(m, x10 )
@variable(m, x11 )
@variable(m, x12 )
@variable(m, x13 )
@variable(m, x14 )
@variable(m, x15 )
@variable(m, x16 )
@variable(m, x17 )
@variable(m, x18>=0.001, start=96.1523975231246 )
@variable(m, x19>=0.001, start=95.8007796007676  )
@variable(m, x20>=0.001, start=96.1523975231246  )
@variable(m, x21>=0.001, start=95.8007796007676  )
@variable(m, x22>=0.001, start=95.303225278852  )
@variable(m, x23>=0 )
@variable(m, x24>=0 )
@variable(m, x25>=0 )
@variable(m, x26>=0 )
@variable(m, x27>=0 )
@variable(m, x28>=0 )
@variable(m, x29>=0 )
@variable(m, x30>=0 )
@variable(m, 0.05245<=x31<=0.0857, start=0.069075 )
@variable(m, 0.06175<=x32<=0.095, start=0.078375 )
@variable(m, 0.0619<=x33<=0.0939, start=0.0779 )
@variable(m, 0.0368<=x34<=0.0768, start=0.0568 )
@variable(m, 0.0368<=x35<=0.0768, start=0.0568 )


@objective(m, :Min, -(- x18 - x19 - x20 - x21 - x22 + 30000*x23 - 25000*x24
+ 30000*x25 + 50000*x26 - 25000*x27 - 5000*x28 - 15000*x29 - 50000*x30) + 20682900)


@NLconstraint(m,   - 95.54*exp(0.09167*x31) + x18 == 0)

@NLconstraint(m,   - 93.27*exp(0.33889*x32) + x19 == 0)

@NLconstraint(m,   - 95.54*exp(0.09167*x31) + x20 == 0)

@NLconstraint(m,   - 93.27*exp(0.33889*x32) + x21 == 0)

@NLconstraint(m,   - 91.03*exp(0.58889*x33) + x22 == 0)

@NLconstraint(m,   - exp(-0.33889*x32)*(x21*errorf(x2) - 95*errorf(x10)) + x23 == 0)

@NLconstraint(m,   - exp(-0.33889*x32)*(x21*errorf(x3) - 97*errorf(x11)) + x25 == 0)

@NLconstraint(m,   - exp(-0.58889*x33)*(x22*errorf(x6) - 95*errorf(x14)) + x24 == 0)

@NLconstraint(m,   - exp(-0.58889*x33)*(x22*errorf(x7) - 97*errorf(x15)) + x26 == 0)

@NLconstraint(m,   - exp(-0.58889*x33)*(x22*errorf(x8) - 99*errorf(x16)) + x27 == 0)

@NLconstraint(m,   - exp(-0.33889*x32)*(95*errorf(-x12) - x21*errorf(-x4)) + x28 == 0)

@NLconstraint(m,   - exp(-0.33889*x32)*(97*errorf(-x13) - x21*errorf(-x5)) + x29 == 0)

@NLconstraint(m,   - exp(-0.58889*x33)*(99*errorf(-x17) - x22*errorf(-x9)) + x30 == 0)

@NLconstraint(m,   - 1.71779218689115*(log(0.0105263157894737*x21) + 0.169445*(x34)he)/x34
       + x2 == 0)

@NLconstraint(m,   - 1.71779218689115*(log(0.0103092783505155*x21) + 0.169445*(x34)he)/x34
       + x3 == 0)

@NLconstraint(m,   - 1.71779218689115*(log(0.0105263157894737*x21) + 0.169445*(x34)he)/x34
       + x4 == 0)

@NLconstraint(m,   - 1.71779218689115*(log(0.0103092783505155*x21) + 0.169445*(x34)he)/x34
       + x5 == 0)

@NLconstraint(m,   - 1.30311549893554*(log(0.0105263157894737*x22) + 0.294445*(x35)he)/x35
       + x6 == 0)

@NLconstraint(m,   - 1.30311549893554*(log(0.0103092783505155*x22) + 0.294445*(x35)he)/x35
       + x7 == 0)

@NLconstraint(m,   - 1.30311549893554*(log(0.0101010101010101*x22) + 0.294445*(x35)he)/x35
       + x8 == 0)

@NLconstraint(m,   - 1.30311549893554*(log(0.0101010101010101*x22) + 0.294445*(x35)he)/x35
       + x9 == 0)

@constraint(m,   - x2 + x10 + 0.582142594215541*x34 == 0)

@constraint(m,   - x3 + x11 + 0.582142594215541*x34 == 0)

@constraint(m,   - x4 + x12 + 0.582142594215541*x34 == 0)

@constraint(m,   - x5 + x13 + 0.582142594215541*x34 == 0)

@constraint(m,   - x6 + x14 + 0.767391686168152*x35 == 0)

@constraint(m,   - x7 + x15 + 0.767391686168152*x35 == 0)

@constraint(m,   - x8 + x16 + 0.767391686168152*x35 == 0)

@constraint(m,   - x9 + x17 + 0.767391686168152*x35 == 0)


    return m
end


m = createModel()
m = copyNLModel(m)
m.solver = SCIPSolver("limits/gap", mingap, "limits/absgap", mingap, "limits/time", 43200.0)
solve(m)
println(m.colVal)

